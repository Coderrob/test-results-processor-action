name: Reusable Test Results Processor

on:
  workflow_call:
    inputs:
      test-results:
        description: 'The path to the test results artifact (zip format)'
        required: true
        type: string
      pages-repo:
        description: 'The repository to update with test results. If not provided, a new repo will be created from a template.'
        required: false
        type: string
      github-token:
        description: 'GitHub token for authentication'
        required: true
        type: string

jobs:
  setup-pages-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Check if Pages Repository Exists
        id: check-pages-repo
        run: |
          if [ -z "${{ inputs.pages-repo }}" ]; then
            echo "pages_repo_exists=false" >> $GITHUB_ENV
          else
            echo "pages_repo_exists=true" >> $GITHUB_ENV
          fi

      - name: Create Repository from Template (if needed)
        if: env.pages_repo_exists == 'false'
        run: |
          TEMPLATE_REPO="Coderrob/test-results-dashboard"
          OWNER_OF_REPO="${{ env.GITHUB_ACTOR }}"
          NEW_REPO="test-results-dashboard"
          curl -X POST -H "Authorization: token ${{ inputs.github-token }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/$TEMPLATE_REPO/generate \
               -d '{"owner": "'${OWNER_OF_REPO}'", "name": "'${NEW_REPO}'", "private": false}'
          echo "pages-repo=${OWNER_OF_REPO}/${NEW_REPO}" >> $GITHUB_ENV

      - name: Set Pages Repository Variable
        run: |
          if [ "$pages_repo_exists" = "false" ]; then
            echo "::set-output name=pages-repo::Coderrob/test-results-dashboard"
          else
            echo "::set-output name=pages-repo::${{ inputs.pages-repo }}"
          fi

  process-results:
    needs: setup-pages-repo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Test Results
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.test-results }}

      - name: Parse Test Results
        uses: actions/setup-node@v3

      - run: npm install -g test-results-reporter-parser

      - run: test-results-reporter-parser parse --input ${{ inputs.test-results }} --output parsed_results.json

      - name: Checkout Pages Repository
        uses: actions/checkout@v3
        with:
          repository: ${{ needs.setup-pages-repo.outputs.pages-repo }}
          token: ${{ inputs.github-token }}
          path: test-results-dashboard

      - name: Copy Parsed Results to Pages Repository
        run: |
          mkdir -p test-results-dashboard/data
          cp parsed_results.json test-results-dashboard/data/latest_results.json

      - name: Update Summary JSON File
        run: |
          node ./scripts/updateSummary.js test-results-dashboard/data/latest_results.json test-results-dashboard/data/summary.json

      - name: Commit and Push Changes to Pages Repo
        run: |
          cd test-results-dashboard
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update test results [skip ci]"
          git push

  generate-dashboard:
    needs: process-results
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Pages Repository
        uses: actions/checkout@v3
        with:
          repository: ${{ needs.setup-pages-repo.outputs.pages-repo }}
          token: ${{ inputs.github-token }}
          path: test-results-dashboard

      - name: Generate Historical Data and Coverage
        run: |
          node ./scripts/generateDashboard.js test-results-dashboard/data/summary.json

      - name: Commit and Push Updated Dashboard
        run: |
          cd test-results-dashboard
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Generate new dashboard insights [skip ci]"
          git push
